library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
nonprofs <- dbGetQuery(jdbcConnection, "select * from NONPROFS where rownum < 1500")
dbDisconnect(jdbcConnection)
}
View(nonprofs)
View(nonprofs1)
View(nonprofs)
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
nonprofs <- dbGetQuery(jdbcConnection, "select * from NONPROFS where rownum < 1500")
dbDisconnect(jdbcConnection)
}
View(nonprofs)
nonprofs2 <- dbGetQuery(jdbcConnection, "select * from NONPROFS where rownum > 1500 and < 3000")
dbDisconnect(jdbcConnection)
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
nonprofs <- dbGetQuery(jdbcConnection, "select * from NONPROFS where rownum < 1500")
nonprofs2 <- dbGetQuery(jdbcConnection, "select * from NONPROFS where rownum > 1500 and < 3000")
dbDisconnect(jdbcConnection)
}
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
nonprofs <- dbGetQuery(jdbcConnection, "select * from NONPROFS where rownum < 1500")
nonprofs2 <- dbGetQuery(jdbcConnection, "select * from NONPROFS where rownum > 1500 and rownum < 3000")
dbDisconnect(jdbcConnection)
}
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
nonprofs <- dbGetQuery(jdbcConnection, "select * from NONPROFS where rownum < 1500")
nonprofs2 <- dbGetQuery(jdbcConnection, "select * from NONPROFS where rownum > 1500 and rownum < 3000")
dbDisconnect(jdbcConnection)
}
View(nonprofs2)
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
nonprofs <- dbGetQuery(jdbcConnection, "select * from NONPROFS where rownum < 1500")
nonprofs1 <- dbGetQuery(jdbcConnection, "select * from ( select m.*, rownum r from NONPROFS m) where r > 150000 and r < 300001")
dbDisconnect(jdbcConnection)
}
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
nonprofs <- dbGetQuery(jdbcConnection, "select * from NONPROFS where rownum < 1500")
nonprofs1 <- dbGetQuery(jdbcConnection, "select * from ( select m.*, rownum r from NONPROFS m) where r > 1500 and r < 3001")
dbDisconnect(jdbcConnection)
}
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
nonprofs <- dbGetQuery(jdbcConnection, "select * from NONPROFS where rownum < 677179")
dbDisconnect(jdbcConnection)
}
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
nonprofs <- dbGetQuery(jdbcConnection, "select * from NONPROFS where rownum < 100000")
dbDisconnect(jdbcConnection)
}
nonprofs <- dbGetQuery(jdbcConnection, "select * from NONPROFS where rownum < 10000")
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
list = seq(1,677179 by 10000)
nonprofs <- dbGetQuery(jdbcConnection, "select * from NONPROFS where rownum < 10000")
dbDisconnect(jdbcConnection)
}
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
num = seq(1,677179 by 10000)
nonprofs <- dbGetQuery(jdbcConnection, "select * from NONPROFS where rownum < 10")
dbDisconnect(jdbcConnection)
}
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
num = seq(1,677179 by=10000)
nonprofs <- dbGetQuery(jdbcConnection, "select * from NONPROFS where rownum < 10")
dbDisconnect(jdbcConnection)
}
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
sqr = seq(1, 100 by=2)
nonprofs <- dbGetQuery(jdbcConnection, "select * from NONPROFS where rownum < 10")
dbDisconnect(jdbcConnection)
}
if(!inherits(possibleError, "error")){
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
nonprofs <- dbGetQuery(jdbcConnection, "select * from NONPROFS where rownum < 10000")
dbDisconnect(jdbcConnection)
}
nonprofs <- dbGetQuery(jdbcConnection, "select * from NONPROFS where rownum < 10000")
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
sqr = seq(1, 100 by=2)
nonprofs <- dbGetQuery(jdbcConnection, "select * from NONPROFS where rownum < 10000")
dbDisconnect(jdbcConnection)
}
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
for(n in 1:2)
{
nonprofs <- dbGetQuery(jdbcConnection, "select * from NONPROFS where rownum < 10000")
}
dbDisconnect(jdbcConnection)
}
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
for(n in 1:2)
{
nonprofs <- dbGetQuery(jdbcConnection, "select * from NONPROFS where rownum < 10000")
}
dbDisconnect(jdbcConnection)
}
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
for(n in 1:2)
{
nonprofs <- dbGetQuery(jdbcConnection, "select * from NONPROFS where rownum < \n ")
}
dbDisconnect(jdbcConnection)
}
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
for(n in 1:2)
{
nonprofs <- dbSendQuery(jdbcConnection, "select * from NONPROFS where rownum < 677179 ")
}
dbDisconnect(jdbcConnection)
}
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
for(n in 1:5)
{
s =  "select * from ( select m.*, rownum r from NONPROFS m) where r >" + n*10000 "and r <" + ((n+1)*10000+1) + ")"
nonprofs <- dbgetQuery(jdbcConnection, s)
}
dbDisconnect(jdbcConnection)
}
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error"))
{
for(n in 1:5)
{
s =  "select * from ( select m.*, rownum r from NONPROFS m) where r >" + n*10000 "and r <" + ((n+1)*10000+1) + ")"
nonprofs <- dbgetQuery(jdbcConnection, s)
}
dbDisconnect(jdbcConnection)
}
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error"))
{
for(n in 1:5)
{
s =  "select * from ( select m.*, rownum r from NONPROFS m) where r >" + n*10000 "and r <" + ((n+1)*10000+1) + ")"
}
dbDisconnect(jdbcConnection)
}
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error"))
{
for(n in 1:5)
s =  "select * from ( select m.*, rownum r from NONPROFS m) where r >" + n*10000 "and r <" + ((n+1)*10000+1) + ")"
dbDisconnect(jdbcConnection)
}
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
for(n in 1:2)
nonprofs <- dbGetQuery(jdbcConnection, "select * from NONPROFS where rownum < 10000")
dbDisconnect(jdbcConnection)
}
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
for(n in 1:2)
{
nonprofs <- dbGetQuery(jdbcConnection, "select * from NONPROFS where rownum < 10000")
}
dbDisconnect(jdbcConnection)
}
s =  "select * from ( select m.*, rownum r from NONPROFS m) where r >" + n*10000 "and r <" + ((n+1)*10000+1) + ")"
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
for(n in 1:2)
{
s =  "select * from ( select m.*, rownum r from NONPROFS m) where r >" + n*10000 "and r" < + ((n+1)*10000+1) + ")"
nonprofs <- dbGetQuery(jdbcConnection, "select * from NONPROFS where rownum < 10000")
}
dbDisconnect(jdbcConnection)
}
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
nonprofs <- dbSendQuery(jdbcConnection, "select * from NONPROFS where rownum < 677179")
dbDisconnect(jdbcConnection)
}
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
nonprofs <- dbSendQuery(jdbcConnection, "select * from NONPROFS where rownum < 677179")
dbDisconnect(jdbcConnection)
}
ag
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
nonprofs <- dbSendQuery(jdbcConnection, "select * from NONPROFS where rownum < 677179")
dbDisconnect(jdbcConnection)
}
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
library("lubridate", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
options(java.parameters="-Xmx2g")
library(rJava)
library(RJDBC)
jdbcDriver <- JDBC(driverClass="oracle.jdbc.OracleDriver", classPath="C:/Program Files/Java/jdk1.7.0_67/ojdbc6.jar")
# In the following, use your username and password instead of "CS347_prof", "orcl_prof" once you have an Oracle account
possibleError <- tryCatch(
jdbcConnection <- dbConnect(jdbcDriver, "jdbc:oracle:thin:@128.83.138.158:1521:orcl", "C##cs347_jcb3564", "orcl_jcb3564"),
error=function(e) e
)
if(!inherits(possibleError, "error")){
res <- dbSendQuery(jdbcConnection, "select * from NONPROFS where rownum < 677179")
result<-list()
i=1
result[[i]]<-fetch(res,n=100000)
while(nrow(chunk <- fetch(res, n = 100000))>0){
i<-i+1
result[[i]]<-chunk
}
allResults<-do.call(rbind,result)
dbDisconnect(jdbcConnection)
}
